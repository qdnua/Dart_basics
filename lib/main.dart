//import 'package:flutter/material.dart';
import 'package:unit_2/lib_unit2.dart';
import 'dart:math';
void main() {
 //MathUnit2 Nod()
  print('Задание № 1');
//  print(Calc().nod(30, 12));
  print('НОД (24,44)='+ Calc().nod(24, 44).toString());
  print('НОК (24,44)='+ Calc().nok(24, 44).toString());

  Calc().printSimple(264);
  print('Вариант разложение числа на простые множетели №2');
  var list1 = <int>[];
  Calc().printSimpleV2(264, list1);

  list1.forEach((element) {
    print(element);
  });
  print('-----------------------------------------------------');
  print('Задание № 2. Преобразование целых чисел из десятичной системы в двоичную');

  print ('перевод числа 23 из дясятичной системы в двоичную равен '+Calc().from10To2(23).toString());
  print ('перевод числа 12 из дясятичной системы в двоичную равен '+Calc().from10To2(12).toString());

  print ('перевод числа 10111 из двоичной системы в десятичную равен '+Calc().from2To10(10111).toString());
  print ('перевод числа 1100 из двоичной системы в десятичную равен '+Calc().from2To10(1100).toString());
  print('-----------------------------------------------------');
  print('Задание № 3. Реализуйте метод, который принимает строку слов, разделённых пробелами. ');
  print('Задача — найти в данной строке числа и вернуть коллекцию num этих чисел.');

  print('4 Папа 123 Мама 888 Сын 333.45 Дочь 4');
  var nRes = <num>[];
  Calc().findNumInString('4 Папа 123 Мама 888 Сын 333.45 Дочь 4', nRes);

  nRes.forEach((element) {
    print(element);
  });
  print('-----------------------------------------------------');
  print('Задание № 4. Есть коллекция слов. Реализуйте метод, возвращающий Map. Данный Map должен соотносить слово');
  print('и количество его вхождений в данную коллекцию.');

  var s = ['Лист', 'Дерево','Ствол','Корень','Лист','Лист','Пень','Ствол'];
  Map<String, int> lMap = new Map<String, int>();

  Calc().groupWord(s, lMap);
  print(s);
  print (lMap);

  print('-----------------------------------------------------');
  print('Задание № 5. Есть коллекция строк вида ‘one, two, three, cat, dog’ или любого другого. ');
  print('Реализуйте метод, возвращающий цифры без повторений, которые встречаются в данной строке.');
  print('Однако цифры встречаются в виде английских слов от zero до nine. Например, в результате строки');
  print('one, two, zero, zero’ мы получим следующий результат: [1, 2, 0]. Если в строке есть слова,');
  print('не являющиеся цифрами от 0 до 9, пропускайте их.');

  s = ['one', 'one', 'two', 'three', 'cat', 'dog'];
  Map<String, int> lMap2 = new Map<String, int>();
  Calc().groupDigital(s, lMap2);
  print(s);
  print (lMap2);
  print (lMap2.values);
  print('-----------------------------------------------------');
  print('Задание № 6.Реализуйте класс Point, который описывает точку в трёхмерном пространстве. У данного класса реализуйте ');
  print('метод distanceTo(Point another), который возвращает расстояние от данной точки до точки в параметре. ');
  print('По желанию можете реализовать метод, принимающий три точки в трёхмерном пространстве и возвращающий ');
  print('площадь треугольника, который образуют данные точки. Реализуйте factory-конструкторы для данного класса,');
  print('возвращающие начало координат, и ещё несколько на своё усмотрение (например, конструктор, возвращающий ');
  print('точку с координатами [1,1,1], которая определяет единичный вектор).');

  final Point p1 = Point.one();
  final Point p2 = Point(2,2,2);
  p1.display();
  p1.DistanceTo(p2);
  print('Расстоняние от точни p1 до p2 равно :'+ p1.DistanceTo(p2).toString());


  print('-----------------------------------------------------');
  print('Задание № 7. Реализуйте метод, который вычисляет корень любой заданной степени из числа. ');
  print('Реализуйте данный метод как extension-метод для num. Алгоритм можете взять на википедии как ');
  print('«Алгоритм нахождения корня n-й степени». Запрещается использовать методы math. В случае когда ');
  print('значение вернуть невозможно, необходимо бросать исключение с описанием ошибки.');
  print(' a= 8, n = 3 результат '+8.0.KorenN(3).toString());
  print(' a= 625, n = 5 результат '+ 625.0.KorenN(4).toString());
  try {
    print('-----------------');
    print(' a= -798, n = 6 результат ');
    print (-798.0.KorenN(6));
    print('-----------------');
  }
  catch(e){
    print("Возникло исключение $e");
  }

  try {
    print('-----------------');
    print(' a= 2, n = 0 результат ');
    print (2.0.KorenN(0));
    print('-----------------');
  }
  catch(e){
    print("Возникло исключение $e");
  }
  print('-----------------');
  print(' a= -64, n = 3 результат ');
  print(-64.0.KorenN(3));

  print('-----------------------------------------------------');
  print('Задание № 8.Создайте класс User, у которого есть поле email. '
      'Реализуйте два наследника данного класса AdminUser и GeneralUser. '
      'Реализуйте mixin над классом User, у которого будет метод getMailSystem, '
      'который возвращает значение из email, которое находится после @. '
      'Например, если email пользователя user@mail.ru, то данный метод вернёт mail.ru. '
      'Используйте данный миксин на AdminUser. Далее реализуйте класс UserManager<T extends User>, '
      'у которого будет храниться список пользователей и будут методы добавления или удаления их. '
      'Также в UserManager реализуйте метод, который выведет почту всех пользователей, '
      'однако если пользователь admin, будет выведено значение после @. '
      'Проверьте реализованные методы на практике.');
//    print('{ ключ: ${e.key}, значение: ${e.value} }');
  final user1 = User('user1@mail.ru');
  final user2 = AdminUser('user2@rampler.ru');
  final user3 = User('user3@mail.ru');
  print(user2.email);

  print(user2.getMailSystem);

  final stack = UserManager<User>();

  stack.push(user1);
  stack.push(user2);
  stack.push(user3);

  print('-----------');
  stack.printList();
  stack.pop();
  print('-----------');
  stack.printList();
  print('-----------------------------------------------------');
  print('Задание № 9.');

  print('f = sin(x) ,a = 0, b = pi/2, ответ должнен быть равен 1)');
  Function fun2 = (num) =>  (sin(num));

  print (TrapezoidRule().calc(fun2, 0, pi/2, 0.0000000001, 10));

  print('-----------');
  print('f = 1/(1+x*x) ,a = 0, b = 1, ответ должнен быть равен pi/4 = 0.7853981633 )');
  Function fun3 = (num) =>  (1/ (1 + num*num));

  print (TrapezoidRule().calc(fun3, 0, 1, 0.0000000001, 10));
  print('-----------');
  //print('all');
}
